<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[daviwil.com]]></title><description><![CDATA[Technology, Creativity, and Life]]></description><link>https://daviwil.com</link><generator>metalsmith-feed</generator><lastBuildDate>Mon, 30 Oct 2017 18:33:34 GMT</lastBuildDate><atom:link href="https://daviwil.com/rss.xml" rel="self" type="application/rss+xml"/><author><![CDATA[David Wilson]]></author><item><title><![CDATA[The Journey Continues]]></title><description><![CDATA[<p>Friday was my last day at Microsoft.  I was lucky to be hired there straight out
of grad school and even luckier to continue working there for just short of 10 years.
I&#39;ve had the privilege of working with kind, talented people on projects to which
I&#39;m proud to have contributed.</p>]]></description><link>https://daviwil.com/articles/the-journey-continues</link><guid isPermaLink="true">https://daviwil.com/articles/the-journey-continues</guid><dc:creator><![CDATA[David Wilson]]></dc:creator><pubDate>Mon, 30 Oct 2017 07:00:00 GMT</pubDate></item><item><title><![CDATA[Parsing Text with Combinators - F# Part 5]]></title><description><![CDATA[<p>In this episode we start building a set of parser combinators which can parse the adventure game&#39;s text commands in a functional way.  We&#39;ll also cover topics like recursive descent parsers, left-associativity, and F#&#39;s range operator.</p>]]></description><link>https://daviwil.com/videos/the-dev-aspect/parsing-text-with-combinators-fsharp</link><guid isPermaLink="true">https://daviwil.com/videos/the-dev-aspect/parsing-text-with-combinators-fsharp</guid><dc:creator><![CDATA[David Wilson]]></dc:creator><pubDate>Thu, 22 Sep 2016 07:00:00 GMT</pubDate></item><item><title><![CDATA[Functional Concurrency with the Actor Model - F# Part 4]]></title><description><![CDATA[<p>In this episode we learn about the Actor Model and use F#&#39;s MailboxProcessor to create a game loop for our text-based adventure game.  We&#39;ll also briefly cover a few more F# features like recursive functions, computation expressions, classes and exception handling.</p>]]></description><link>https://daviwil.com/videos/the-dev-aspect/functional-concurrency-with-the-actor-model-fsharp</link><guid isPermaLink="true">https://daviwil.com/videos/the-dev-aspect/functional-concurrency-with-the-actor-model-fsharp</guid><dc:creator><![CDATA[David Wilson]]></dc:creator><pubDate>Wed, 31 Aug 2016 07:00:00 GMT</pubDate></item><item><title><![CDATA[Functional Game Logic with State Pipelines - F# Part 3]]></title><description><![CDATA[<p>In this episode we start building the basic logic for our text adventure game by constructing a logic pipeline that transforms the game world state.  We cover match expressions, parameter destructuring, and a technique known as Railway-Oriented Programming.</p>]]></description><link>https://daviwil.com/videos/the-dev-aspect/functional-game-logic-with-state-pipelines-fsharp</link><guid isPermaLink="true">https://daviwil.com/videos/the-dev-aspect/functional-game-logic-with-state-pipelines-fsharp</guid><dc:creator><![CDATA[David Wilson]]></dc:creator><pubDate>Thu, 25 Aug 2016 07:00:00 GMT</pubDate></item><item><title><![CDATA[Records and Discriminated Unions - F# Part 2]]></title><description><![CDATA[<p>In this episode, I walk you through the design of a data model for a text-based adventure game in F#. We&#39;ll cover F#&#39;s record types, discriminated unions, and the Option type.</p>]]></description><link>https://daviwil.com/videos/the-dev-aspect/records-and-discriminated-unions-fsharp</link><guid isPermaLink="true">https://daviwil.com/videos/the-dev-aspect/records-and-discriminated-unions-fsharp</guid><dc:creator><![CDATA[David Wilson]]></dc:creator><pubDate>Fri, 19 Aug 2016 07:00:00 GMT</pubDate></item><item><title><![CDATA[Introduction to Functional Programming with F#]]></title><description><![CDATA[<p>In this episode I introduce the F# programming language and guide you through some basic functional programming concepts while showing F# language features.</p>]]></description><link>https://daviwil.com/videos/the-dev-aspect/introduction-to-functional-programming-fsharp</link><guid isPermaLink="true">https://daviwil.com/videos/the-dev-aspect/introduction-to-functional-programming-fsharp</guid><dc:creator><![CDATA[David Wilson]]></dc:creator><pubDate>Fri, 12 Aug 2016 07:00:00 GMT</pubDate></item><item><title><![CDATA[Installing NixOS: Experiences in declarative Linux configuration]]></title><description><![CDATA[<p>
I recently learned of a Linux distribution called <a href="http://nixos.org/">NixOS</a>.  Its website
describes it as a &quot;purely functional&quot; Linux distribution.  Since I&#39;m a
fan of functional programming, the concept of a functional Linux
distribution intrigued me.  Even though I was fairly happy with my
<a href="http://archlinux.org/">Arch Linux</a> install, I decided to give NixOS a shot to see if it lived
up to its promise.  The bottom line is that NixOS and the Nix package
manager are fantastic but a few issues made me switch back to Arch
temporarily until I can get them sorted out.
</p>]]></description><link>https://daviwil.com/articles/installing-nixos</link><guid isPermaLink="true">https://daviwil.com/articles/installing-nixos</guid><dc:creator><![CDATA[David Wilson]]></dc:creator><pubDate>Fri, 07 Nov 2014 08:00:00 GMT</pubDate></item></channel></rss>